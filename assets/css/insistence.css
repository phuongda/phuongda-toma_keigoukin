.p-insistence .l-block-1 > .l-container {
  max-width: 1056px;
}
.p-insistence .l-block-1 .l-block__main img {
  width: min(1000px, 100%);
}
.p-insistence .l-block-2 .l-works {
  margin-top: -46px;
}

.l-flow {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
}

.c-flow {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
}
.c-flow .gr-flow {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
}
.c-flow .item {
  display: flex;
  flex-wrap: wrap;
  position: relative;
}
.c-flow .item .l-contents {
  flex-direction: column;
  align-items: center;
  position: relative;
}
.c-flow .item .l-contents::before {
  width: calc(var(--size) - 2px);
  height: calc(var(--size) - 2px);
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  background: white;
  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  font-size: 1.8rem;
  font-weight: bold;
  text-align: center;
  text-indent: 2px;
  color: var(--color-main);
  position: absolute;
  z-index: 10;
}
.c-flow .item .l-contents::after {
  content: "";
  width: var(--size);
  height: var(--size);
  background: var(--color-main);
  -webkit-clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
          clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  position: absolute;
  z-index: 9;
}

@media screen and (min-width: 581px) {
  .p-insistence .c-flow {
    --size: 60px;
    --margin: 28px;
  }
  .p-insistence .c-flow .gr-flow {
    position: relative;
  }
  .p-insistence .c-flow .gr-flow:not(:last-child) {
    margin-bottom: 80px;
  }
  .p-insistence .c-flow .gr-flow .item:nth-of-type(1)::before {
    content: "";
    width: 150%;
    height: 1px;
    background: var(--color-main);
    position: absolute;
    top: calc(var(--size) / 2);
    left: 0;
    transform: translate(0, -50%);
  }
  .p-insistence .c-flow .gr-flow .item:nth-of-type(1) .l-contents {
    transform: translate(-50%);
  }
  .p-insistence .c-flow .gr-flow .item:nth-of-type(3)::before {
    content: "";
    width: 150%;
    height: 1px;
    background: var(--color-main);
    position: absolute;
    top: calc(var(--size) / 2);
    right: 0;
    transform: translate(0, -50%);
  }
  .p-insistence .c-flow .gr-flow .item:nth-of-type(3) .l-contents {
    transform: translate(50%);
  }
  .p-insistence .c-flow .item {
    width: 33.3333333333%;
  }
  .p-insistence .c-flow .item .l-contents {
    padding-top: calc(var(--size) + var(--margin));
  }
  .p-insistence .c-flow .item .l-contents::before {
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
  }
  .p-insistence .c-flow .item .l-contents::after {
    top: -1px;
    left: 50%;
    transform: translate(-50%, 0);
  }
}
@media screen and (max-width: 1440px) {
  .p-insistence .l-flow {
    padding-left: 100px;
    padding-right: 100px;
  }
}
@media screen and (max-width: 991px) {
  .p-insistence .l-flow {
    padding-left: 90px;
    padding-right: 90px;
  }
}
@media screen and (max-width: 580px) {
  .p-insistence .l-flow {
    padding-top: 10px;
    padding-left: 0;
    padding-right: 0;
  }
  .p-insistence .l-flow .c-flow {
    width: auto;
    flex-direction: column;
    margin-left: auto;
    margin-right: auto;
    --size: 50px;
    --margin: 20px;
    position: relative;
  }
  .p-insistence .l-flow .c-flow .gr-flow {
    flex-direction: column;
    align-items: flex-start;
  }
  .p-insistence .l-flow .c-flow .gr-flow:last-child .item:last-child {
    padding-bottom: 0;
  }
  .p-insistence .l-flow .c-flow .gr-flow:last-child .item:last-child::before {
    display: none;
  }
  .p-insistence .l-flow .c-flow .item {
    padding-bottom: 35px;
  }
  .p-insistence .l-flow .c-flow .item::before {
    content: "";
    width: 2px;
    height: 100%;
    background: var(--color-main);
    position: absolute;
    top: 0;
    left: 0;
  }
  .p-insistence .l-flow .c-flow .item .l-contents {
    align-items: flex-start;
    padding-left: calc(var(--size) / 2 + var(--margin));
  }
  .p-insistence .l-flow .c-flow .item .l-contents::before {
    left: calc(var(--size) / 2);
    top: 15px;
    transform: translate(-100%, -50%);
  }
  .p-insistence .l-flow .c-flow .item .l-contents::after {
    left: calc(var(--size) / 2 + 1px);
    top: 15px;
    transform: translate(-100%, -50%);
  }
}